{namespace bitbucket.config.jenkins.job.integration}

/**
 * @param repository Repository object
 * @param jenkinsCIServerList List of Jenkins servers
 * @param jenkinsUserName Jenkins username
 * @param jenkinsPassword Jenkins password
 * @param buildRefField Build reference field
 * @param buildTitleField Build Title field
 * @param buildDelayField Build Delay field
 * @param toBranchField To Branch field
 * @param fromBranchField From Branch field
 * @param triggerBuildOnCreate True if a build should triggered when pull request is created
 * @param triggerBuildOnUpdate True if a build should triggered when pull request is updated
 * @param triggerBuildOnReopen True if a build should triggered when pull request is reopened
 * @param disableAutomaticBuildByDefault True if the "Disable automatic build" is enabled
 * @param buildPullRequestUrlField pull request URL field
 */
{template .repositorySettings}
<html>
<head>
    <meta name="decorator" content="bitbucket.repository.settings">
    <meta name="projectKey" content="{$repository.project.key}">
    <meta name="repositorySlug" content="{$repository.slug}">
    <meta name="activeTab" content="repository-settings-plugin-tab">
    <title>{$repository.slug} / Jenkins pull request integration settings</title>
</head>
<body>
	<header class="aui-page-header">
		<div class="aui-page-header-inner">
			<div class="aui-page-header-main">
			    <h2>Jenkins pull request integration settings</h2>
			</div>
		</div>
	</header>
<div id="aui-message-bar"></div>
<form action="#" method="post" id="jenkinsconfigform" class="aui prevent-double-submit stash-repository-edit-settings-form">
	<fieldset class="group checkbox">
		<div class="checkbox">
	        <input class="checkbox" type="checkbox" id="disableAutomaticBuildByDefault" name="disableAutomaticBuildByDefault" {$disableAutomaticBuildByDefault}">
	        <label for="disableAutomaticBuildByDefault">Enable 'Disable automatic build'</label>
	        <div class="description">Enable by default 'Disable automatic build'</div>
		</div>
	</fieldset>
	<fieldset class="group checkbox">
		<div class="checkbox">
	        <input class="checkbox" type="checkbox" id="triggerBuildOnCreate" name="triggerBuildOnCreate" {$triggerBuildOnCreate}">
	        <label for="triggerBuildOnCreate">Trigger on new pull request</label>
	        <div class="description">Enable triggering a build when a new pull request is created</div>
		</div>
	</fieldset>
	<fieldset class="group checkbox">
		<div class="checkbox">
	        <input class="checkbox" type="checkbox" id="triggerBuildOnUpdate" name="triggerBuildOnUpdate" {$triggerBuildOnUpdate}">
	        <label for="triggerBuildOnUpdate">Trigger on update pull request</label>
	        <div class="description">Enable triggering a build when a pull request is updated</div>
		</div>
	</fieldset>
	<fieldset class="group checkbox">
		<div class="checkbox">
	        <input class="checkbox" type="checkbox" id="triggerBuildOnReopen" name="triggerBuildOnReopen" {$triggerBuildOnReopen}">
	        <label for="triggerBuildOnReopen">Trigger on reopen pull request</label>
	        <div class="description">Enable triggering a build when a pull request is reopened</div>
		</div>
	</fieldset>

    <div class="field-group">
        <label for="jenkinsBaseUrl">URL</label>
        <input class="text" type="text" id="jenkinsBaseUrl" name="jenkinsBaseUrl" title="URL" style="max-width: 400px">&nbsp;<button class="aui-button" type="button" id="addJenkinsCiServer">Add</button>
        <div class="description">A Base Url to the Jenkins API</div>
    </div>

	<div class="field-group">
        <label for="multiselect">Jenkins CI servers<span class="aui-icon icon-required"> required</span></label>
        <span>
	        <select class="multi-select" size="4" multiple="true" id="_jenkinsCIServerList" name="jenkinsCIServerList" style="max-width: 400px">
	         {if $jenkinsCIServerList}
	          {foreach $keyword in $jenkinsCIServerList}
	    		<option value="{$keyword}">{$keyword |bidiUnicodeWrap}</option>
		      {/foreach}
		     {/if}
	        </select>&nbsp;<button class="aui-button" type="button" id="removeJenkinsCiServer" style="vertical-align: top">Remove</button>
        </span>
        <div class="description">A list of Jenkins CI servers for executing jobs.</div>
    </div>

    <div class="field-group">
        <label for="jenkinsUserName">Username</label>
        <input class="text"" type="text" id="jenkinsUserName" name="jenkinsUserName" title="Username" value="{$jenkinsUserName}">
        <div class="description">Jenkins username</div>
    </div>
    <div class="field-group">
        <label for="jenkinsPassword" accesskey="p">Password</label>
        <input class="password" type="password" id="jenkinsPassword" name="jenkinsPassword" title="password" value="{$jenkinsPassword}">
    </div>

    <div class="field-group">
        <label for="buildRefField">Build ref. field<span class="aui-icon icon-required"> required</span></label>
        <input class="text" type="text" id="buildRefField" name="buildRefField" title="Build ref. field" value="{$buildRefField}">
        <div class="description">The name of the build reference field for the Jenkins job</div>
    </div>

    <div class="field-group">
        <label for="buildTitleField">Build title field</label>
        <input class="text" type="text" id="buildTitleField" name="buildTitleField" title="Build title field" value="{$buildTitleField}">
        <div class="description">Build title field</div>
    </div>

    <div class="field-group">
        <label for="buildTitleField">Pull request URL&nbsp;field</label>
        <input class="text" type="text" id="buildPullRequestUrlField" name="buildPullRequestUrlField" title="Pull request URL field" value="{$buildPullRequestUrlField}">
        <div class="description">Pull request URL field, add the name of the job parameter that should contain the URL of the pull request</div>
    </div>

     <div class="field-group">
        <label for="buildDelay">Delay build</label>
        <input class="text" type="text" id="buildDealyField" name="buildDelayField" title="Build delay field" value="{$buildDelayField}">
        <div class="description">Enter value in seconds for delaying the build when the pull request is open,reopen, update</div>
    </div>

     <div class="field-group">
        <label for="fromBranchField">From branch (label)</label>
        <input class="text" type="text" id="fromBranchField" name="fromBranchField" title="From Branch (label)" value="{$fromBranchField}">
        <div class="description">From Branch URL field, add the name of the job parameter that should contain the label of the from branch</div>
    </div>

     <div class="field-group">
        <label for="toBranchField">To branch (label)</label>
        <input class="text" type="text" id="toBranchField" name="toBranchField" title="To Branch (label)" value="{$toBranchField}">
        <div class="description">To Branch URL field, add the name of the job parameter that should contain the label of the to branch</div>
    </div>
    <input class="text" type="hidden" id="repository.slug" name="repository.slug" value="{$repository.slug}">


    <div class="buttons-container">
        <div class="buttons">
            <input class="button submit" type="submit" value="Save" id="d-save-btn1">
            <a class="cancel" href="#">Cancel</a>
        </div>
    </div>
</form>
	{literal}
		<script>
		  var editUrl = false;

		  AJS.$(document).ready(function() {
		         AJS.$("#addJenkinsCiServer").unbind("click").click(function(e) {
		            var url =  AJS.$.trim(AJS.$("#jenkinsBaseUrl").val());
		            if (url != null && url != "") {
		                if (editUrl) {
				          AJS.$("#_jenkinsCIServerList option:selected").replaceWith("<option value='"+url+"'>"+url+"</option>")
				          editUrl = false;
				        } else {
				          AJS.$("#_jenkinsCIServerList").append("<option value='"+url+"'>"+url+"</option>")
				        }
				        AJS.$("#jenkinsBaseUrl").val("");
					}
			     });
			    return false;
		  });
		  AJS.$(document).ready(function() {
			     AJS.$("#removeJenkinsCiServer").unbind("click").click(function(e) {
		            AJS.$("#_jenkinsCIServerList option:selected").remove();
			     });
			    return false;
		  });
		  AJS.$(document).ready(function() {
			     AJS.$("#_jenkinsCIServerList").unbind("dblclick").dblclick(function(e) {
		            AJS.$("#jenkinsBaseUrl").val(AJS.$("#_jenkinsCIServerList option:selected").val());
		            editUrl = true;
			     });
			    return false;
		  });
		  AJS.$(document).ready(function() {
			     AJS.$("#jenkinsconfigform").on('submit', function(e) {

				       AJS.$("#_jenkinsCIServerList").find('option').each(function() {
							AJS.$(this).attr('selected', 'selected');
					   });
					   if (AJS.$("#buildRefField").val() == "") {
					    e.preventDefault();
					    AJS.messages.warning({
					       title: "Mandatory Field",
					       body: "The field \"Build ref. field\" require a value."
					    });
					   }
					   if (AJS.$isNumeric(AJS.$("#buildDelayField").val())) {
					    e.preventDefault();
					    AJS.messages.warning({
					       title: "Mandatory Field",
					       body: "The field \"Build Delay field\" require a value 0 or higher."
					    });
					   }
					   if (AJS.$("#_jenkinsCIServerList option").size() == 0) {
					    e.preventDefault();
					    AJS.messages.warning({
					       title: "Mandatory Field",
					       body: "No CI servers is added to the list \"Jenkins CI servers\" as required."
					    });
					   }
    			 });
		  });
		</script>
	{/literal}
</body>
</html>
{/template}